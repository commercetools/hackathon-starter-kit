/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
import { ProductTailoringUpdate } from "../../models/cart.js";
import { ProductTailoring } from "../../models/product-tailoring.js";
import { executeRequest, QueryParam } from "../../shared/utils/common-types.js";
import { ApiRequest } from "../../shared/utils/requests-utils.js";
import { ByProjectKeyInStoreKeyByStoreKeyProductsByProductIDProductTailoringImagesRequestBuilder } from "../images/by-project-key-in-store-key-by-store-key-products-by-product-id-product-tailoring-images-request-builder.js";
/**
 **/
export declare class ByProjectKeyInStoreKeyByStoreKeyProductsByProductIDProductTailoringRequestBuilder {
    protected readonly args: {
        pathArgs: {
            projectKey: string;
            storeKey: string;
            productID: string;
        };
        executeRequest: executeRequest;
        baseUri?: string;
    };
    constructor(args: {
        pathArgs: {
            projectKey: string;
            storeKey: string;
            productID: string;
        };
        executeRequest: executeRequest;
        baseUri?: string;
    });
    images(): ByProjectKeyInStoreKeyByStoreKeyProductsByProductIDProductTailoringImagesRequestBuilder;
    /**
     *	Gets the current or staged representation of a [Product Tailoring](ctp:api:type:ProductTailoring) by its Product ID in the specified [Store](ctp:api:type:Store).
     *
     */
    get(methodArgs?: {
        queryArgs?: {
            expand?: string | string[];
            [key: string]: QueryParam;
        };
        headers?: {
            [key: string]: string | string[];
        };
    }): ApiRequest<ProductTailoring>;
    /**
     *	Updates the current or staged representation of a [Product Tailoring](ctp:api:type:ProductTailoring) by its Product ID in the specified [Store](ctp:api:type:Store).
     *
     */
    post(methodArgs: {
        queryArgs?: {
            expand?: string | string[];
            [key: string]: QueryParam;
        };
        body: ProductTailoringUpdate;
        headers?: {
            [key: string]: string | string[];
        };
    }): ApiRequest<ProductTailoring>;
    /**
     *	Generates the [ProductTailoringDeleted](ctp:api:type:ProductTailoringDeletedMessage) Message.
     *
     */
    delete(methodArgs: {
        queryArgs: {
            version: number;
            expand?: string | string[];
            [key: string]: QueryParam;
        };
        headers?: {
            [key: string]: string | string[];
        };
    }): ApiRequest<ProductTailoring>;
}
//# sourceMappingURL=by-project-key-in-store-key-by-store-key-products-by-product-id-product-tailoring-request-builder.d.ts.map