/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
import { StandalonePrice, StandalonePriceDraft, StandalonePricePagedQueryResponse } from "../../models/standalone-price.js";
import { executeRequest, QueryParam } from "../../shared/utils/common-types.js";
import { ApiRequest } from "../../shared/utils/requests-utils.js";
import { ByProjectKeyStandalonePricesByIDRequestBuilder } from "./by-project-key-standalone-prices-by-id-request-builder.js";
import { ByProjectKeyStandalonePricesKeyByKeyRequestBuilder } from "./by-project-key-standalone-prices-key-by-key-request-builder.js";
/**
 **/
export declare class ByProjectKeyStandalonePricesRequestBuilder {
    protected readonly args: {
        pathArgs: {
            projectKey: string;
        };
        executeRequest: executeRequest;
        baseUri?: string;
    };
    constructor(args: {
        pathArgs: {
            projectKey: string;
        };
        executeRequest: executeRequest;
        baseUri?: string;
    });
    withKey(childPathArgs: {
        key: string;
    }): ByProjectKeyStandalonePricesKeyByKeyRequestBuilder;
    withId(childPathArgs: {
        ID: string;
    }): ByProjectKeyStandalonePricesByIDRequestBuilder;
    get(methodArgs?: {
        queryArgs?: {
            expand?: string | string[];
            sort?: string | string[];
            limit?: number;
            offset?: number;
            withTotal?: boolean;
            where?: string | string[];
            [key: string]: QueryParam;
        };
        headers?: {
            [key: string]: string | string[];
        };
    }): ApiRequest<StandalonePricePagedQueryResponse>;
    /**
     *	Checks if one or more StandalonePrices exist for the provided query predicate. Returns a `200` status if any StandalonePrices match the query predicate, or a `404` status otherwise.
     */
    head(methodArgs?: {
        queryArgs?: {
            where?: string | string[];
            [key: string]: QueryParam;
        };
        headers?: {
            [key: string]: string | string[];
        };
    }): ApiRequest<void>;
    /**
     *	Creating a Standalone Price produces the [StandalonePriceCreated](ctp:api:type:StandalonePriceCreatedMessage) Message.
     *
     *	- If the Standalone Price has the same price scope as an existing Standalone Price, a [DuplicateStandalonePriceScope](ctp:api:type:DuplicateStandalonePriceScopeError) error is returned.
     *	- If the Standalone Price has overlapping validity periods within the same price scope, a [OverlappingStandalonePriceValidity](ctp:api:type:OverlappingStandalonePriceValidityError) error is returned. A Price without validity period does not conflict with a Price defined for a time period.
     *
     */
    post(methodArgs: {
        queryArgs?: {
            expand?: string | string[];
            [key: string]: QueryParam;
        };
        body: StandalonePriceDraft;
        headers?: {
            [key: string]: string | string[];
        };
    }): ApiRequest<StandalonePrice>;
}
//# sourceMappingURL=by-project-key-standalone-prices-request-builder.d.ts.map