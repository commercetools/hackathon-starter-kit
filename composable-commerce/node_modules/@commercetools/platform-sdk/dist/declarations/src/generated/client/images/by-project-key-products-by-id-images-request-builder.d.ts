/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
import { Product } from "../../models/product.js";
import { executeRequest, QueryParam } from "../../shared/utils/common-types.js";
import { ApiRequest } from "../../shared/utils/requests-utils.js";
/**
 **/
export declare class ByProjectKeyProductsByIDImagesRequestBuilder {
    protected readonly args: {
        pathArgs: {
            projectKey: string;
            ID: string;
        };
        executeRequest: executeRequest;
        baseUri?: string;
    };
    constructor(args: {
        pathArgs: {
            projectKey: string;
            ID: string;
        };
        executeRequest: executeRequest;
        baseUri?: string;
    });
    /**
     *	Uploads a JPEG, PNG, or a GIF image file to a [ProductVariant](ctp:api:type:ProductVariant).
     *	The maximum file size of the image is **10MB**.
     *	Either `variant` or `sku` is required to update a specific ProductVariant.
     *	If neither is provided, the image is uploaded to the Master Variant of the Product.
     *
     *	The response status code depends on the size of the original image.
     *	If the image is small, the API responds with `200 OK`, and if the image is larger, it responds with `202 Accepted`.
     *	The Product returned with a `202 Accepted` status code contains a `warnings` field with an [ImageProcessingOngoing](ctp:api:type:ImageProcessingOngoingWarning) Warning.
     *
     *	Produces the [ProductImageAdded](/projects/messages/product-catalog-messages#product-image-added) Message.
     *
     */
    post(methodArgs: {
        queryArgs?: {
            filename?: string;
            variant?: number;
            sku?: string;
            staged?: boolean;
            [key: string]: QueryParam;
        };
        body: Buffer | Buffer | Buffer;
        headers?: {
            'Content-Type': string | string[];
            [key: string]: string | string[];
        };
    }): ApiRequest<Product>;
}
//# sourceMappingURL=by-project-key-products-by-id-images-request-builder.d.ts.map