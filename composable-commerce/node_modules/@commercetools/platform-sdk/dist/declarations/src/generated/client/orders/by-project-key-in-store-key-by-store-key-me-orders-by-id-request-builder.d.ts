/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
import { Order } from "../../models/order.js";
import { executeRequest, QueryParam } from "../../shared/utils/common-types.js";
import { ApiRequest } from "../../shared/utils/requests-utils.js";
/**
 **/
export declare class ByProjectKeyInStoreKeyByStoreKeyMeOrdersByIDRequestBuilder {
    protected readonly args: {
        pathArgs: {
            projectKey: string;
            storeKey: string;
            ID: string;
        };
        executeRequest: executeRequest;
        baseUri?: string;
    };
    constructor(args: {
        pathArgs: {
            projectKey: string;
            storeKey: string;
            ID: string;
        };
        executeRequest: executeRequest;
        baseUri?: string;
    });
    /**
     *	Retrieves an Order with the provided `id` in a [Store](ctp:api:type:Store) for the authenticated Customer or anonymous user. Returns a `200` status if successful.
     *
     *	A [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error is returned in the following scenarios:
     *
     *	- If no Orders exists in the Store with the provided `id`.
     *	- If an Order exists but does not have a `store` specified, or the `store` field references a different Store.
     *	- If an Order exists but does not have a `customerId` that matches the [customer:{id}](/scopes#composable-commerce-oauth) scope, or `anonymousId` that matches the [anonymous_id:{id}](/scopes#composable-commerce-oauth) scope.
     *
     */
    get(methodArgs?: {
        queryArgs?: {
            expand?: string | string[];
            [key: string]: QueryParam;
        };
        headers?: {
            [key: string]: string | string[];
        };
    }): ApiRequest<Order>;
    /**
     *	Checks if an Order exists with the provided `id` in a [Store](ctp:api:type:Store) for the authenticated Customer or anonymous user. Returns a `200` status if successful.
     *
     *	A [Not Found](/../api/errors#404-not-found) error is returned in the following scenarios:
     *
     *	- If no Order exists in the Store with the provided `id`.
     *	- If an Order exists but does not have a `store` specified, or the `store` field references a different Store.
     *	- If an Order exists but does not have a `customerId` that matches the [customer:{id}](/scopes#composable-commerce-oauth) scope, or `anonymousId` that matches the [anonymous_id:{id}](/scopes#composable-commerce-oauth) scope.
     *
     */
    head(methodArgs?: {
        headers?: {
            [key: string]: string | string[];
        };
    }): ApiRequest<void>;
}
//# sourceMappingURL=by-project-key-in-store-key-by-store-key-me-orders-by-id-request-builder.d.ts.map