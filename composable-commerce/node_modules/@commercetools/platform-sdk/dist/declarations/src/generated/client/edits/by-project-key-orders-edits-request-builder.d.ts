/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
import { OrderEdit, OrderEditDraft, OrderEditPagedQueryResponse } from "../../models/order-edit.js";
import { executeRequest, QueryParam } from "../../shared/utils/common-types.js";
import { ApiRequest } from "../../shared/utils/requests-utils.js";
import { ByProjectKeyOrdersEditsByIDRequestBuilder } from "./by-project-key-orders-edits-by-id-request-builder.js";
import { ByProjectKeyOrdersEditsKeyByKeyRequestBuilder } from "./by-project-key-orders-edits-key-by-key-request-builder.js";
/**
 **/
export declare class ByProjectKeyOrdersEditsRequestBuilder {
    protected readonly args: {
        pathArgs: {
            projectKey: string;
        };
        executeRequest: executeRequest;
        baseUri?: string;
    };
    constructor(args: {
        pathArgs: {
            projectKey: string;
        };
        executeRequest: executeRequest;
        baseUri?: string;
    });
    withKey(childPathArgs: {
        key: string;
    }): ByProjectKeyOrdersEditsKeyByKeyRequestBuilder;
    withId(childPathArgs: {
        ID: string;
    }): ByProjectKeyOrdersEditsByIDRequestBuilder;
    /**
     *	Retrieves OrderEdits in the Project.
     */
    get(methodArgs?: {
        queryArgs?: {
            expand?: string | string[];
            sort?: string | string[];
            limit?: number;
            offset?: number;
            withTotal?: boolean;
            where?: string | string[];
            [key: string]: QueryParam;
        };
        headers?: {
            [key: string]: string | string[];
        };
    }): ApiRequest<OrderEditPagedQueryResponse>;
    /**
     *	Checks if one or more OrderEdits exist for the provided query predicate. Returns a `200` status if any OrderEdits match the query predicate, or a `404` status otherwise.
     */
    head(methodArgs?: {
        queryArgs?: {
            where?: string | string[];
            [key: string]: QueryParam;
        };
        headers?: {
            [key: string]: string | string[];
        };
    }): ApiRequest<void>;
    /**
     *	Creates an OrderEdit in the Project.
     *	You can either create multiple Order Edits for an Order and apply them sequentially to an Order, or create multiple Order Edits parallelly (as alternatives to each other) and apply one of them to the Order.
     *
     *	You can only create an Order Edit if the [InventoryMode](/projects/carts#inventorymode) of the Order and its [LineItems](/projects/carts#lineitem) is `None`.
     *
     */
    post(methodArgs: {
        queryArgs?: {
            expand?: string | string[];
            [key: string]: QueryParam;
        };
        body: OrderEditDraft;
        headers?: {
            [key: string]: string | string[];
        };
    }): ApiRequest<OrderEdit>;
}
//# sourceMappingURL=by-project-key-orders-edits-request-builder.d.ts.map