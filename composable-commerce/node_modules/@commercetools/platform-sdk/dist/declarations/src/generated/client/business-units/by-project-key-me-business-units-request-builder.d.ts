/**
 * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.
 * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.
 * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.
 */
import { BusinessUnit, BusinessUnitPagedQueryResponse } from "../../models/business-unit.js";
import { MyBusinessUnitDraft } from "../../models/me.js";
import { executeRequest, QueryParam } from "../../shared/utils/common-types.js";
import { ApiRequest } from "../../shared/utils/requests-utils.js";
import { ByProjectKeyMeBusinessUnitsByIDRequestBuilder } from "./by-project-key-me-business-units-by-id-request-builder.js";
import { ByProjectKeyMeBusinessUnitsKeyByKeyRequestBuilder } from "./by-project-key-me-business-units-key-by-key-request-builder.js";
/**
 **/
export declare class ByProjectKeyMeBusinessUnitsRequestBuilder {
    protected readonly args: {
        pathArgs: {
            projectKey: string;
        };
        executeRequest: executeRequest;
        baseUri?: string;
    };
    constructor(args: {
        pathArgs: {
            projectKey: string;
        };
        executeRequest: executeRequest;
        baseUri?: string;
    });
    withId(childPathArgs: {
        ID: string;
    }): ByProjectKeyMeBusinessUnitsByIDRequestBuilder;
    withKey(childPathArgs: {
        key: string;
    }): ByProjectKeyMeBusinessUnitsKeyByKeyRequestBuilder;
    /**
     *	Retrieves Business Units for the authenticated Customer. Returns a `200` status if successful, or a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error otherwise.
     *
     */
    get(methodArgs?: {
        queryArgs?: {
            expand?: string | string[];
            sort?: string | string[];
            limit?: number;
            offset?: number;
            withTotal?: boolean;
            where?: string | string[];
            [key: string]: QueryParam;
        };
        headers?: {
            [key: string]: string | string[];
        };
    }): ApiRequest<BusinessUnitPagedQueryResponse>;
    /**
     *	Checks if one or more BusinessUnits exist for the provided query predicate. Returns a `200` status if any BusinessUnits match the Query Predicate and the Customer has access to them, or a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error otherwise.
     *
     */
    head(methodArgs?: {
        queryArgs?: {
            where?: string | string[];
            [key: string]: QueryParam;
        };
        headers?: {
            [key: string]: string | string[];
        };
    }): ApiRequest<void>;
    /**
     *	Automatically assigns the Associate to the Business Unit in the default [Associate Role](ctp:api:type:AssociateRole) defined in [BusinessUnitConfiguration](ctp:api:type:BusinessUnitConfiguration). If there is no default Associate Role configured, this request fails with an [InvalidOperation](ctp:api:type:InvalidOperationError) error. When creating a Division, the Associate must have the `AddChildUnits` [Permission](ctp:api:type:Permission) in the parent unit. If the required [Permission](/projects/associate-roles#permission) is missing, an [AssociateMissingPermission](/errors#associatemissingpermission) error is returned.
     *
     */
    post(methodArgs: {
        queryArgs?: {
            expand?: string | string[];
            [key: string]: QueryParam;
        };
        body: MyBusinessUnitDraft;
        headers?: {
            [key: string]: string | string[];
        };
    }): ApiRequest<BusinessUnit>;
}
//# sourceMappingURL=by-project-key-me-business-units-request-builder.d.ts.map